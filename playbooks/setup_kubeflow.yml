- name: "set up kubeflow"
  gather_facts: false
  hosts: manager
  # environment:
  #   - KUBEFLOW_RELEASE_VERSION ="v1.7.0"
  # use the bash shell instead of sh
  vars:
    ansible_shell_executable: /bin/bash
  tasks:
    - name: "did you already set up the k8s cluster?"
      shell: "kubectl get nodes"
      register: k8s_cluster_status
      ignore_errors: true
    - name: "install unzip"
      apt:
        name: unzip
        state: present
      become: true
      become_method: sudo
    - name: "add an alias to make python3.8 the default python"
      shell: "echo 'alias python=python3.8' >> ~/.bashrc"
      when: k8s_cluster_status.rc != 0
    - name: "source the bashrc"
      shell: "source ~/.bashrc"
      when: k8s_cluster_status.rc != 0
    # - name: "define the kubeflow version"
    #   shell: "export KUBEFLOW_RELEASE_VERSION=v1.7.0"
    #   when: k8s_cluster_status.rc != 0
    # - name: "define the aws release"
    #   shell: "export AWS_DEFAULT_REGION=v1.7.0-aws-b1.0.2"
    #   when: k8s_cluster_status.rc != 0
    - name: "download the kubeflow manifests"
      shell: "git clone https://github.com/awslabs/kubeflow-manifests.git && cd kubeflow-manifests && git checkout ${AWS_RELEASE_VERSION} && git clone --branch ${KUBEFLOW_RELEASE_VERSION} https://github.com/kubeflow/manifests.git upstream"
      when: k8s_cluster_status.rc != 0
    - name: "install make"
      apt:
        name: make
        state: present
      become: true
      become_method: sudo
    - name: "copy the IAM role updater script"
      copy:
        src: "../config/update_IAM_role.py"
        dest: "/tmp/iam-role-updater.py"
        mode: 0755
    - name: "run the IAM role updater script"
      shell: "python3 /tmp/iam-role-updater.py"
    - name: "install tools"
      shell: "cd kubeflow-manifests && make tools"
      when: k8s_cluster_status.rc != 0 
    # - name: "set up the k8s cluster"
    #   shell: "cd /home/ubuntu/kubeflow/kubeflow-manifests/deployments/vanilla/terraform && make deploy"
    #   when: k8s_cluster_status.rc != 0
    - name: "copy all the kubeflow directories"
      copy:
        src: "../config/kubeflow/"
        dest: "/tmp/kubeflow-manifests/kubeflow"
        mode: 0755
      tags: kubeflow
      # to run only this task: ansible-playbook -i hosts playbooks/setup_kubeflow.yml --tags "kubeflow"
    # - name: "enable kbp to be runned from notebook"
    #   shell: "kubectl apply -f /tmp/kubeflow-manifests/kubeflow/access-kbp-jupyter.yml"
    # - name: "add kserver user"
    #   shell: "kubectl apply -f /tmp/kubeflow-manifests/kubeflow/set_kserver_account.yml"
    # - name: "set the RBAC authorazation"
    #   shell: "kubectl apply -f /tmp/kubeflow-manifests/kubeflow/add_auto_kserver.yml"
