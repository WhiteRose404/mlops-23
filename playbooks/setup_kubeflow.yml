- name: "set up kubeflow"
  gather_facts: false
  hosts: manager

  vars:
    ansible_shell_executable: /bin/bash
    region: "eu-west-3"
    cluster: "my-kuby"
  tasks:
    - name: "did you already set up the k8s cluster?"
      shell: "kubectl get nodes"
      register: k8s_cluster_status
      ignore_errors: true
    - name: "install unzip"
      apt:
        name: unzip
        state: present
      become: true
      become_method: sudo
    - name: "add an alias to make python3.8 the default python"
      shell: "echo 'alias python=python3.8' >> ~/.bashrc"
      when: k8s_cluster_status.rc != 0
    - name: "source the bashrc"
      shell: "source ~/.bashrc"
      when: k8s_cluster_status.rc != 0
    - name: "did we already clone the kubeflow repo?"
      shell: "ls /home/ubuntu/provision"
      register: kubeflow_repo_status
      ignore_errors: true
    - name: "repo does not exists:clone the kubeflow repo"
      shell: "git clone https://github.com/WhiteRose404/provision.git"
      when: kubeflow_repo_status.rc != 0
    - name: "repo exists: update the repo"
      shell: "cd /home/ubuntu/provision && git pull"
      when: kubeflow_repo_status.rc == 0
    - name: "specify region"
      shell: "echo 'cluster_name = \"{{ cluster }}\"\ncluster_region = \"{{ region }}\"' > /home/ubuntu/provision/deployments/vanilla/terraform/sample.auto.tfvars"
      when: k8s_cluster_status.rc != 0
    - name: "install make"
      apt:
        name: make
        state: present
      become: true
      become_method: sudo
    - name: "copy the IAM role updater script"
      copy:
        src: "../config/update_IAM_role.py"
        dest: "/tmp/iam-role-updater.py"
        mode: 0755
    - name: "run the IAM role updater script"
      shell: "python3 /tmp/iam-role-updater.py"
    - name: "install tools"
      shell: "cd provision && make install-tools"
      when: k8s_cluster_status.rc != 0 
    # - name: "set up the k8s cluster"
    #   shell: "cd /home/ubuntu/provision/deployments/vanilla/terraform && make deploy"
    #   when: k8s_cluster_status.rc != 0